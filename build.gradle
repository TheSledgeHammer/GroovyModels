buildscript {
	repositories {
		maven { url = 'https://maven.minecraftforge.net' }
		mavenCentral()
		gradlePluginPortal()
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'com.android.tools.build:gradle:2.3.0'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'groovy'
apply plugin: 'idea'

File mavenGradle = file('maven.gradle')
mavenGradle = file(mavenGradle.absolutePath)
apply from: mavenGradle

version = "${version_major}.${version_minor}.${version_patch}"
group= "ooo.thesledgehammer"
archivesBaseName = "groovymodels"

java.toolchain.languageVersion = JavaLanguageVersion.of(16)

repositories {
	maven {
		name = "Apache Groovy"
		url = "https://mvnrepository.com/artifact/org.codehaus.groovy/groovy"
	}
	maven {
		name = "Apache Groovy Json"
		url = "https://mvnrepository.com/artifact/org.codehaus.groovy/groovy-json"
	}
	maven {
		name = "Apache Groovy Xml"
		url = "https://mvnrepository.com/artifact/org.codehaus.groovy/groovy-xml"
	}
	maven {
		name = "Apache Groovy Yaml"
		url = "https://mvnrepository.com/artifact/org.codehaus.groovy/groovy-yaml"
	}
	maven {
		name = "TheSledgeHammer GroovyForge"
		url = "https://maven.pkg.github.com/TheSledgeHammer/GroovyForge"
		credentials {
			username = project.hasProperty('github_key') ? project.property('github_key') : System.getenv("github_user")
			password = project.hasProperty('github_key') ? project.property('github_key') : System.getenv("github_key")
		}
	}
}

minecraft {
	mappings channel: "${mcp_channel}", version:"${mcp_version}"
	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

	runs {
		client {
			workingDirectory project.file('run')
			properties 'forge.logging.markers': 'SCAN,REGISTRIES,REGISTRYDUMP'
			properties 'forge.logging.console.level': 'debug'

			mods {
				groovymodels {
					source sourceSets.main
				}
			}
		}

		server {
			workingDirectory project.file('run')
      property 'forge.logging.markers', 'REGISTRIES'
      property 'forge.logging.console.level', 'debug'

			mods {
				groovymodels {
					source sourceSets.main
				}
			}
		}

		data {
			workingDirectory project.file('run')
			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'
			args '--mod', 'groovymodels', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

      mods {
				groovymodels {
					source sourceSets.main
				}
			}
		}
	}
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
	minecraft "net.minecraftforge:forge:${mcversion}-${forgeversion}"
	implementation "org.codehaus.groovy:groovy:${groovy_version}"
	implementation "org.codehaus.groovy:groovy-json:${groovy_version}"
	implementation "org.codehaus.groovy:groovy-xml:${groovy_version}"
	implementation "org.codehaus.groovy:groovy-yaml:${groovy_version}"
	implementation "ooo.thesledgehammer:groovyforge:${groovyforge_version}"
}

jar {
	manifest {
		attributes(['Specification-Title': 'GroovyModels',
					'Specification-Vendor': 'TheSledgeHammer',
					'Specification-Version': "1",
					'Implementation-Title': "GroovyModels",
					'Implementation-Version': "${version}",
					'Implementation-Vendor' :'TheSledgeHammer',
					'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}
